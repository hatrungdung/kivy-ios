diff -Naur faiss-1.7.1/_build_python/swigfaiss.py faiss-1.7.1/_build_python/swigfaiss-patched.py
--- faiss-1.7.1/_build_python/swigfaiss.py      2021-07-19 13:55:09.000000000 +0100
+++ faiss-1.7.1/_build_python/swigfaiss-patched.py      2021-07-19 13:55:33.000000000 +0100
@@ -9,10 +9,12 @@
     raise RuntimeError("Python 2.7 or later required")
 
 # Import the low-level C/C++ module
-if __package__ or "." in __name__:
-    from . import _swigfaiss
-else:
-    import _swigfaiss
+import os
+import ctypes
+dll = ctypes.PyDLL('../lib/_swigfaiss.dylib')
+init = dll.PyInit__swigfaiss
+init.restype = ctypes.py_object
+_swigfaiss = init()
 
 try:
     import builtins as __builtin__
     
diff -Naur faiss-1.7.1/_build_python/setup.py faiss-1.7.1/_build_python/setup-patched.py
--- faiss-1.7.1/_build_python/setup.py      2021-07-19 13:55:09.000000000 +0100
+++ faiss-1.7.1/_build_python/setup-patched.py      2021-07-19 13:55:33.000000000 +0100
@@ -16,7 +16,7 @@
 shutil.copyfile("__init__.py", "faiss/__init__.py")
 shutil.copyfile("loader.py", "faiss/loader.py")
 
-ext = ".pyd" if platform.system() == 'Windows' else ".so"
+ext = ".pyd" if platform.system() == 'Windows' else ".dylib"
 prefix = "Release/" * (platform.system() == 'Windows')
 
 swigfaiss_generic_lib = f"{prefix}_swigfaiss{ext}"
@@ -61,7 +61,7 @@
     install_requires=['numpy'],
     packages=['faiss', 'faiss.contrib'],
     package_data={
-        'faiss': ['*.so', '*.pyd'],
+        'faiss': ['*.so', '*.pyd', '*.dylib'],
     },
 
 )

diff -Naur faiss-1.7.1/faiss/python/CMakeLists.txt faiss-1.7.1/faiss/python/CMakeLists-patched.txt
--- faiss-1.7.1/faiss/python/CMakeLists.txt     2021-07-22 13:49:08.000000000 +0100
+++ faiss-1.7.1/faiss/python/CMakeLists-patched.txt     2021-07-22 13:49:49.000000000 +0100
@@ -64,7 +64,7 @@
 endif()
 
 swig_add_library(swigfaiss
-  TYPE SHARED
+  TYPE STATIC
   LANGUAGE python
   SOURCES swigfaiss.swig
 )
@@ -72,7 +72,7 @@
 set_property(SOURCE swigfaiss_avx2.swig
   PROPERTY SWIG_MODULE_NAME swigfaiss_avx2)
 swig_add_library(swigfaiss_avx2
-  TYPE SHARED
+  TYPE STATIC
   LANGUAGE python
   SOURCES swigfaiss_avx2.swig
 )
@@ -80,12 +80,6 @@
   set_target_properties(swigfaiss_avx2 PROPERTIES EXCLUDE_FROM_ALL TRUE)
 endif()
 
-if(NOT WIN32)
-  # NOTE: Python does not recognize the dylib extension.
-  set_target_properties(swigfaiss PROPERTIES SUFFIX .so)
-  set_target_properties(swigfaiss_avx2 PROPERTIES SUFFIX .so)
-endif()
-
 if(FAISS_ENABLE_GPU)
   find_package(CUDAToolkit REQUIRED)
   target_link_libraries(swigfaiss PRIVATE CUDA::cudart)